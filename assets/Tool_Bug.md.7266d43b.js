import{_ as s,c as a,o as n,a as l}from"./app.f98d1513.js";const A=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[{"level":2,"title":"进子页面添加数据后返回，父页面数据不更新","slug":"进子页面添加数据后返回-父页面数据不更新","link":"#进子页面添加数据后返回-父页面数据不更新","children":[]},{"level":2,"title":"npm run serve进度条卡住不动","slug":"npm-run-serve进度条卡住不动","link":"#npm-run-serve进度条卡住不动","children":[]},{"level":2,"title":"Date对象","slug":"date对象","link":"#date对象","children":[]},{"level":2,"title":"列表类数据出错","slug":"列表类数据出错","link":"#列表类数据出错","children":[]},{"level":2,"title":"webpack打包遇到的问题","slug":"webpack打包遇到的问题","link":"#webpack打包遇到的问题","children":[]},{"level":2,"title":"Chrome吞请求","slug":"chrome吞请求","link":"#chrome吞请求","children":[]}],"relativePath":"Tool/Bug.md"}'),e={name:"Tool/Bug.md"},o=l(`<h2 id="进子页面添加数据后返回-父页面数据不更新" tabindex="-1">进子页面添加数据后返回，父页面数据不更新 <a class="header-anchor" href="#进子页面添加数据后返回-父页面数据不更新" aria-hidden="true">#</a></h2><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#A6ACCD;">window</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">history</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">go</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 返回不刷新</span></span>
<span class="line"><span style="color:#A6ACCD;">window</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">addEventListener</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">pageshow</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">e</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">e</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">persisted</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#676E95;font-style:italic;">// 如果检测到页面是从&quot;缓存&quot;中读取的，重新加载页面</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#A6ACCD;">window</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">location</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">reload</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><h2 id="npm-run-serve进度条卡住不动" tabindex="-1">npm run serve进度条卡住不动 <a class="header-anchor" href="#npm-run-serve进度条卡住不动" aria-hidden="true">#</a></h2><p>进度一直卡在编译<code>axios</code>下某个模块不动，或者报错<code>core-js</code>下某个模块没找到</p><p>原因：代码问题</p><div class="language-vue"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    &lt;div class=&quot;common-table&quot;&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">        &lt;el-table...&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">el-pagination</span><span style="color:#C792EA;">...</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">&lt;/div&gt;</span></span>
<span class="line"></span></code></pre></div><p>因为把最外层的<code>div</code>删除了，而实际编译时不报错，因为<code>el-pagination</code>是在运行时才会转换成<code>div</code>标签，这就违背了一个<code>template</code>只能存在一个<code>root</code>元素的原则</p><p>解决办法：补回<code>div</code>，回滚<code>package.json</code>和<code>package-lock.json</code>文件然后再</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#A6ACCD;">npm clean cache </span><span style="color:#89DDFF;">--</span><span style="color:#A6ACCD;">force </span><span style="color:#676E95;font-style:italic;">// 清除npm缓存</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 删除掉node_modules包，重新安装</span></span>
<span class="line"><span style="color:#A6ACCD;">npm install</span></span>
<span class="line"></span></code></pre></div><h2 id="date对象" tabindex="-1">Date对象 <a class="header-anchor" href="#date对象" aria-hidden="true">#</a></h2><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Date</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">2022-07-10 11:08:46</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getMonth</span><span style="color:#A6ACCD;">() </span><span style="color:#676E95;font-style:italic;">// 返回的是0-11，要想获得实际月份要加1</span></span>
<span class="line"><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Date</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">2022-07-10 11:08:46</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getDay</span><span style="color:#A6ACCD;">() </span><span style="color:#676E95;font-style:italic;">// 返回的是0-6，代表星期日到星期六，要想获取实际日期用getDate()</span></span>
<span class="line"><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Date</span><span style="color:#A6ACCD;">(date) </span><span style="color:#676E95;font-style:italic;">// ios上的解析会出错，要把-替换成/</span></span>
<span class="line"><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Date</span><span style="color:#A6ACCD;">((date</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">replace</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">/</span><span style="color:#C3E88D;">-</span><span style="color:#89DDFF;">/</span><span style="color:#F78C6C;">g</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">/</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)))</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><h2 id="列表类数据出错" tabindex="-1">列表类数据出错 <a class="header-anchor" href="#列表类数据出错" aria-hidden="true">#</a></h2><p>例如筛选出错等，可能是因为绑定的<code>key</code>重复了，后端返回的列表存在重复数据</p><p>检查方法：在接口响应的<code>Preview</code>里选择<code>expand recursively</code>展开列表数据，再<code>ctrl + F</code>查找出错的数据是否存在两个</p><h2 id="webpack打包遇到的问题" tabindex="-1">webpack打包遇到的问题 <a class="header-anchor" href="#webpack打包遇到的问题" aria-hidden="true">#</a></h2><p>webpack开发环境没问题，生产环境报找不到模块 最终排查原因：导入模块大小写不对，目录名是orgCheckList，import语句里是OrgCheckList，但IDE能正常跳转，开发环境表现正常 开发环境window不区分大小写，生产环境linux对大小写敏感</p><h2 id="chrome吞请求" tabindex="-1">Chrome吞请求 <a class="header-anchor" href="#chrome吞请求" aria-hidden="true">#</a></h2><p>问题描述：进入A页面，会同时发起三个请求（获取当前tab的信息概览，记录访问日志，获取选项列表），切换到B页面再切回A页面，会只发两个，再切到B页面再切回，又是正常发三个，再继续切就是一直循环</p><p>原因：chrome锁定缓存，并在再次请求相同资源之前等待查看一次请求的结果</p><p>解决方法：找到使请求唯一的方法，例如在记录日志接口的参数中添加随机数，如time: Date.now()</p><p>另一种解决方法是看能不能将其中某个接口的触发改到别的时间点，</p><p>最后选择了第二种方法，将获取选项列表从useEffect换到useUpdateEffect中，!canGetList &amp;&amp; setCanGetList(true)</p>`,22),p=[o];function t(c,r,i,D,y,d){return n(),a("div",null,p)}const C=s(e,[["render",t]]);export{A as __pageData,C as default};
