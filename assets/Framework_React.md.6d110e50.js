import{_ as s,c as a,o as n,a as e}from"./app.aa9074ec.js";const d=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[{"level":2,"title":"声明计算属性","slug":"声明计算属性","link":"#声明计算属性","children":[]},{"level":2,"title":"useRef","slug":"useref","link":"#useref","children":[]}],"relativePath":"Framework/React.md"}'),l={name:"Framework/React.md"},o=e(`<p><a href="https://beta.reactjs.org" target="_blank" rel="noreferrer">官网</a></p><h2 id="声明计算属性" tabindex="-1">声明计算属性 <a class="header-anchor" href="#声明计算属性" aria-hidden="true">#</a></h2><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">amount1</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> setAmount1</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">useState</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">0</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">amount2</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> setAmount2</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">useState</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">0</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> totalAmount </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> amount1 </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> amount2 </span><span style="color:#676E95;font-style:italic;">// 相当于vue的computed</span></span>
<span class="line"></span></code></pre></div><h2 id="useref" tabindex="-1">useRef <a class="header-anchor" href="#useref" aria-hidden="true">#</a></h2><p>可以读取或写入，写入时不会触发渲染，当修改值不需要重新渲染时，使用<code>useRef</code>节省开销</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> ref </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">useRef</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">0</span><span style="color:#A6ACCD;">) </span><span style="color:#676E95;font-style:italic;">// ref.current = 0</span></span>
<span class="line"></span></code></pre></div>`,6),t=[o];function p(c,r,A,C,i,y){return n(),a("div",null,t)}const u=s(l,[["render",p]]);export{d as __pageData,u as default};
